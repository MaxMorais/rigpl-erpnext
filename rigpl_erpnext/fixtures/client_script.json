[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Bank Account",
  "enabled": 1,
  "modified": "2021-02-05 00:48:55.513693",
  "name": "bank_account_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Bank Account\", {\n    refresh: function(frm){\n        cur_frm.cscript.lock_fields(frm)\n    },\n    onload: function(frm){\n        cur_frm.cscript.lock_fields(frm)\n    },\n    verified: function(frm){\n        cur_frm.cscript.lock_fields(frm)\n    },\n    is_company_account: function(frm){\n        frm.doc.party_type = \"\"\n        frm.doc.party = \"\"\n        frm.doc.account = \"\"\n        frm.doc.bank = \"\"\n    },\n});\n\ncur_frm.cscript.lock_fields = function(frm){\n    var read_only_value = frm.doc.verified;\n    var locked_fields = [\"account_name\", \"account\", \"bank\", \"is_company_account\", \"company\",\n    \"bank_account_no\", \"branch_code\", \"swift_number\", \"party_type\", \"party\", \"name_in_bank_records\"]\n    for (var i = 0; i < locked_fields.length; i++){\n        frm.set_df_property(locked_fields[i], \"read_only\", read_only_value);\n    }\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Branch",
  "enabled": 1,
  "modified": "2022-08-25 22:52:01.922464",
  "name": "branch_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Branch\", {\n    refresh: function(frm){\n    },\n    onload: function(frm){\n        frm.set_query(\"state\", function(doc) {\n            return {\n                filters: [\n                    ['country', '=', doc.country]\n                ]\n            };\n        });\n    },\n});\n\nfrappe.ui.form.on(\"Branch\", \"country\", function(frm){\n    frm.set_value(\"state\", \"\")\n    frm.refresh_fields()\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Communication",
  "enabled": 1,
  "modified": "2016-07-22 21:02:55.490359",
  "name": "communication_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "$.extend(frappe.views.CommunicationComposer, {\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2016-07-22 18:50:55.390632",
  "name": "customer_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.add_fetch('charge','letter_head','letter_head');\nfrappe.ui.form.on(\"Customer\", \"refresh\", function(frm) {\n    frm.add_custom_button(__(\"Sales Call\"), function() {\n        // When this button is clicked, do this\n\t\t\tfrappe.set_route(\"Form\", \"Sales Call Tool\",\n\t\t\t{\"document\": \"Customer\",\n\t\t\t \"customer\": frm.doc.name,\n\t\t\t \"date_of_communication\": Date()});\n\n    },  __(\"Add Communication for\"));\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2021-03-08 09:52:55.339618",
  "name": "delivery_note_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "\nfrappe.ui.form.on('Delivery Note', {\n\trefresh: function(frm) {\n\t},\n\n\tonload: function(frm){\n\t\tfrm.set_query(\"company_address\", function(doc) {\n            return {\n                query: 'frappe.contacts.doctype.address.address.address_query',\n                filters: {\n                    link_doctype: \"Company\",\n                    link_name: \"RIGPL\"\n                }\n            };\n\t\t});\n\t},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2022-01-31 21:02:55.467084",
  "name": "employee_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Employee\", {\n    refresh: function(frm){\n        frappe.dynamic_link = {doc: frm.doc, fieldname: 'name', doctype: 'Employee'}\n        frm.toggle_display(['address_html', 'contact_html'], !frm.doc.__islocal);\n\n        if(!frm.doc.__islocal) {\n            frappe.contacts.render_address_and_contact(frm);\n        } else {\n            frappe.contacts.clear_address_and_contact(frm);\n        }\n    },\n\tonload: function(frm){\n\t\tfrm.set_query(\"holiday_list\", function(doc) {\n\t\t\treturn {\n\t\t\t\t\"filters\": {\n\t\t\t\t\t\"is_base_list\": 1\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Holiday List",
  "enabled": 1,
  "modified": "2021-02-03 22:38:55.264733",
  "name": "holiday_list_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Holiday List\", {\n    onload: function(frm){\n        frm.set_query(\"base_holiday_list\", function(doc){\n            return {\n                filters: [\n                    ['is_base_list', '=', 1]\n                ]\n            };\n        });\n    },\n\n    is_base_list: function(frm){\n        frm.doc.base_holiday_list = \"\";\n    },\n\n    from_date: function(frm){\n        if (frm.doc.is_base_list === 1){\n            frm.doc.holidays = [];\n        }\n    },\n    to_date: function(frm){\n        if (frm.doc.is_base_list === 1){\n            frm.doc.holidays = [];\n        }\n    },\n    pull_holidays: function(frm){\n        frm.doc.holidays = [];\n        frappe.call({\n            method: \"rigpl_erpnext.rigpl_erpnext.validations.holiday_list.pull_holidays\",\n            args : {\n                \"hd_name\": frm.doc.name,\n                \"frm_date\": frm.doc.from_date,\n                \"to_date\": frm.doc.to_date\n            },\n            callback: function(r){\n                if (!r.exc){\n                    frm.refresh_fields(\"holidays\");\n                }\n            }\n        });\n        //frm.reload_doc();\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2021-09-06 21:02:55.539288",
  "name": "item_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.provide(\"erpnext.item\");\n\nfrappe.ui.form.on(\"Item\", {\n\trefresh: function(frm) {\n\t\tif (frm.doc.has_variants) {\n\t\t\tif (frm.doc.variant_based_on === \"Item Attribute\"){\n\t\t\t\tfrm.add_custom_button(__(\"New Variant\"), function() {\n\t\t\t\t\terpnext.item.make_variant_custom()}, \"Create\");\n\t\t\t\tfrm.remove_custom_button(\"Single Variant\", 'Create');\n\t\t\t\tfrm.remove_custom_button(\"Multiple Variants\", 'Create');\n\t\t\t}\n\t\t}\n\t},\n});\n\n$.extend(erpnext.item, {\n\tget_hidden_fields: function(){\n\t\tvar ret = {}, cur_attrs = [];\n\t\tcur_frm.doc.attributes.forEach(function(d){\n\t\t\tcur_attrs.push(d.attribute);\n\t\t});\n\t\tfrappe.call({\n\t\t\t'async': false,\n\t\t\t'method': 'frappe.client.get_list',\n\t\t\t'args': {\n\t\t\t\t'doctype': 'Item Attribute',\n\t\t\t\t'filters': [\n\t\t\t\t    ['Item Attribute', 'hidden', '=', 1],\n\t\t\t\t\t['Item Attribute', 'name', 'in', cur_attrs]\n\t\t\t\t],\n\t\t\t\tfields: [\n\t\t\t\t\t'name', 'update_from', 'source', 'relation'\n\t\t\t\t]\n\t\t\t},\n\t\t\t'callback': function(res){\n\t\t\t\t(res.message || []).forEach(function(r){\n\t\t\t\t\tvar only_allowed, options = [] ;\n\t\t\t\t\tif (!ret.hasOwnProperty(r.update_from)){\n\t\t\t\t\t\tret[r.update_from] = {};\n\t\t\t\t\t\tret[r.update_from]['source'] = r.source;\n\t\t\t\t\t\tret[r.update_from]['options'] = {}\n\t\t\t\t\t}\n\t\t\t\t\tret[r.update_from][r.name] = r.relation;\n\t\t\t\t\tret[r.name] = r.update_from;\n\t\t\t\t\tret['lookup'] = r.update_from;\n\t\t\t\t\tonly_allowed = frappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {\"attribute\": r.name});\n\t\t\t\t\t(only_allowed || []).forEach(function(d){\n\t\t\t\t\t\toptions.push(d.attribute)\n\t\t\t\t\t});\n\t\t\t\t\tif (!options.length){\n\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t'async': false,\n\t\t\t\t\t\t\t'method': 'frappe.client.get_list',\n\t\t\t\t\t\t\t'args': {\n\t\t\t\t\t\t\t\t'doctype': 'Item Attribute Value',\n\t\t\t\t\t\t\t\t'filters': [\n\t\t\t\t\t\t\t\t\t['Item Attribute Value', 'parent', '=', r.name]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t'fields': ['attribute_value'],\n\t\t\t\t\t\t\t\t'limit_page_length': 500,\n\t\t\t\t\t\t\t\t'parent': cur_frm.doctype\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'callback': function(res){\n\t\t\t\t\t\t\t\t(res.message || []).forEach(function(r){\n\t\t\t\t\t\t\t\t\toptions.push(r.attribute_value);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tret[r.update_from]['options'][r.name] = options;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t},\n\tget_conversion_factors: function(from_uom, to_uom){\n\t\tvar ret;\n\t\tfrappe.call({\n\t\t\t'async': false,\n\t\t\t'method': 'rigpl_erpnext.utils.attribute_query.get_uom_factors',\n\t\t\t'args':{\n\t\t\t\t'from_uom': from_uom,\n\t\t\t\t'to_uom': to_uom\n\t\t\t},\n\t\t\t'callback': function(res){\n\t\t\t\tret = res.message;\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t},\n\tmake_variant_custom: function(doc) {\n\t\tvar fields = [], hidden_fields = this.get_hidden_fields(doc);\n\t\tfor(var i=0;i< cur_frm.doc.attributes.length;i++){\n\t\t\tvar row = cur_frm.doc.attributes[i],\n\t\t\t    field, creator;\n\t\t\tif (!hidden_fields.hasOwnProperty(row.attribute)){\n\t\t\t\tfield = {\n\t\t\t\t\t\"label\": (row.attribute + \" (\"+ row.field_name + \")\"),\n\t\t\t\t\t\"fieldname\": row.attribute,\n\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\"fieldtype\": row.numeric_values ? \"Float\": \"Select\",\n\t\t\t\t\t\"description\": row.numeric_values ?  \"Min Value: \"+ row.from_range +\" , Max Value: \"+ row.to_range +\", in Increments of: \"+ row.increment : \"\"\n\t\t\t\t}\n\t\t\t\tif (field.fieldtype==='Select') {\n\t\t\t\t\tvar filters = [\n\t\t\t\t\t\t\t['parent', '=', row.attribute],\n\t\t\t\t\t], allowed = [], options = [null];\n\t\t\t\t\tfrappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {'attribute': row.attribute}).forEach(function(d){\n\t\t\t\t\t\tif (d.allowed_values) allowed.push(d.allowed_values);\n\t\t\t\t\t});\n\t\t\t\t\tif (allowed.length){\n\t\t\t\t\t\toptions = options.concat(allowed);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t'method': 'frappe.client.get_list',\n\t\t\t\t\t\t\t'async': false,\n\t\t\t\t\t\t\t'args': {\n\t\t\t\t\t\t\t\t'doctype': 'Item Attribute Value',\n\t\t\t\t\t\t\t\t'filters': filters,\n\t\t\t\t\t\t\t\t'fields': ['attribute_value'],\n\t\t\t\t\t\t\t\t'parent': cur_frm.doctype\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'callback': function(res){\n\t\t\t\t\t\t\t\tres.message.forEach(function(d){\n\t\t\t\t\t\t\t\t\toptions.push(d.attribute_value);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tfield.options = options;\n\t\t\t\t\tfields.push(field)\n\t\t\t\t}\n\t\t\t} else if (!hidden_fields[hidden_fields[row.attribute]].created){\n\t\t\t\tcreator = hidden_fields[row.attribute];\n\t\t\t\tfield = {\n\t\t\t\t\t'label': (creator + \" (\"+ row.field_name + \")\"),\n\t\t\t\t\t'fieldname': creator,\n\t\t\t\t\t'reqd': 1,\n\t\t\t\t\t'fieldtype': 'Data',\n\t\t\t\t};\n\t\t\t\thidden_fields[creator].created = true;\n\t\t\t\tfields.push(field)\n\t\t\t}\n\t\t}\n\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Make Variant Custom\"),\n\t\t\tfields: fields\n\t\t});\n\n\t\tObject.keys(d.fields_dict).forEach(function(fieldname){\n\t\t\tif (d.fields_dict[fieldname].df.fieldtype !== 'Data') return;\n\n\t\t\tvar field = d.fields_dict[fieldname],\n\t\t\t\ttarget = field.$input.parent(),\n\t\t\t    options = $('<ul class=\"dropdown-menu\"></ul>');\n\n\t\t\tObject.keys(hidden_fields[fieldname]).forEach(function(key){\n\t\t\t\tif (in_list(['created', 'source', 'options'], key)) return;\n\n\t\t\t\tvar option = $(repl('<li><a data-option=\"%(0)s\">%(0)s</a></li>', [hidden_fields[fieldname][key]]));\n\t\t\t\toption.find('a').on('click', function(evt){\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tvar text = options.parent().find('button').text();\n\t\t\t\t\tif (text === $(this).text()) return;\n\t\t\t\t\toptions.parent().find('button').text($(this).text());\n\n\t\t\t\t\tif (field.$input.data('awesomplete_obj')) field.$input.data('awesomplete_obj').destroy();\n\t\t\t\t\tif ((hidden_fields[fieldname].options[key]||'').length){\n\t\t\t\t\t\tfield.$input.data('awesomplete_obj', new Awesomplete(field.$input[0], {\n\t\t\t\t\t\t\tlist: hidden_fields[fieldname].options[key],\n\t\t\t\t\t\t\tminChars: 0,\n\t\t\t\t\t\t\tfilter: Awesomplete.FILTER_STARTSWITH\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tfield.$input.on('awesomplete-select', function(e){\n\t\t\t\t\t\t\tvar awe = field.$input.data('awesomplete_obj');\n\t\t\t\t\t\t\tfield.parse_validate_and_set_in_model(e.originalEvent.text.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\toptions.append(option);\n\t\t\t});\n\n\t\t\t$(frappe.utils.format('<div class=\"input-group-btn\">\\\n\t\t\t\t <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" data-fieldname=\"{1}\" aria-expanded=\"false\">{0}<span class=\"caret\"></span></button>\\\n\t\t\t  </div>', __([hidden_fields[fieldname].source, fieldname]))).append(options).prependTo(target);\n\n\t\t\ttarget.addClass('input-group').removeAttr('style');\n\n\t\t\tfield.$input.on('change', function(evt){\n\t\t\t\tif (!field.$input.val().length) return;\n\t\t\t\tvar uom = options.parent().find('button').text();\n\t\t\t\tif (uom===hidden_fields[fieldname].source){\n\t\t\t\t\tfield.$input.val(\"\");\n\t\t\t\t\tfrappe.throw(frappe.utils.format('Select the \"{0}\" of the field \"{1}\"\", first!', [hidden_fields[fieldname].source, fieldname]))\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\t\td.set_primary_action(__(\"Make\"), function(args) {\n                        var rules = {}, eval_in_context = (js) => {\n                            Object.keys(args).forEach(k => {\n                               js = js.replace(k, \"args.\" + k);\n                            });\n                            return eval(js);\n                        };\n\t\t\tif(!args) return;\n\n\t\t\tfrappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {'is_numeric': 1}).forEach(function(d){\n\t\t\t\tif (!rules.hasOwnProperty(d.attribute)) rules[d.attribute] = [];\n\t\t\t\trules[d.attribute].push(d.rule);\n\t\t\t});\n\n\t\t\tObject.keys(args).filter(function(key){ return hidden_fields.hasOwnProperty(key); }).forEach(function(key){\n\t\t\t\tvar val = args[key], base, targets = Object.keys(hidden_fields[key]).filter(function(k){ return !in_list(['created', 'source', 'options'], k)});\n\t\t\t\ttry {\n\t\t\t\t\tbase = eval(val);\n\t\t\t\t} catch( e ){\n\t\t\t\t\tfrappe.throw(repl('Failed to decode the value \"%(0)s\"', {'0':val}));\n\t\t\t\t}\n\t\t\t\ttargets.forEach(function(tgt){\n\t\t\t\t\tvar uom = Object.keys(hidden_fields[d.fields_dict[key].df.fieldname]).filter((k) => {\n\t\t\t\t\t\t\treturn k.indexOf(key + '_') === 0;\n\t\t\t\t\t\t}).map((k) => {\n\t\t\t\t\t\t\treturn hidden_fields[key][k];\n\t\t\t\t\t\t})[0],\n\t\t\t\t\t\ttgt_uom = hidden_fields[key][tgt],\n\t\t\t\t\t    factors = (uom && tgt_uom) && erpnext.item.get_conversion_factors(uom, tgt_uom);\n\t\t\t\t\tif (uom === tgt_uom) {\n\t\t\t\t\t\targs[tgt] = val.indexOf('/') === -1 ? flt(val) : val;\n\t\t\t\t\t} else if (factors && factors.rgt){\n\t\t\t\t\t\targs[tgt] = flt((base * factors.rgt).toFixed(frappe.defaults.get_global_default('float_precision')));\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs[tgt] = cint(args[key]) || args[key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t    delete args[key];\n\t\t\t});\n\n\t\t\t//debugger;\n\t\t\tObject.keys(args).forEach(function(attribute){\n\t\t\t\tif (!rules.hasOwnProperty(attribute)) return;\n\t\t\t\tvar msg = [], out;\n\t\t\t\tfor (var i=0, j=rules[attribute].length; i < j; i++){\n\t\t\t\t\tout = eval_in_context.call(args, rules[attribute][i]);\n\t\t\t\t\tif (!out){\n\t\t\t\t\t\tmsg.push(repl('Unable for ensure the rule \"%(1)s\" for the field \"%(0)s\"', {\n\t\t\t\t\t\t\t'0': attribute, '1': rules[attribute][i]}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (msg.length){\n\t\t\t\t\tfrappe.throw(msg.join('<br>'))\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.keys(args).forEach(function(attribute){ args[attribute] = args[attribute] + '';});\n\t\t\tfrappe.call({\n\t\t\t\tmethod:\"erpnext.controllers.item_variant.get_variant\",\n\t\t\t\targs: {\n\t\t\t\t\t\"template\": cur_frm.doc.name,\n\t\t\t\t\t\"args\": args\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\t// returns variant item\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tvar variant = r.message;\n\t\t\t\t\t\tvar msgprint_dialog = frappe.msgprint(__(\"Item Variant {0} already exists with same attributes\",\n\t\t\t\t\t\t\t[repl('<a href=\"#Form/Item/%(item_encoded)s\" class=\"strong variant-click\">%(item)s</a>', {\n\t\t\t\t\t\t\t\titem_encoded: encodeURIComponent(variant),\n\t\t\t\t\t\t\t\titem: variant\n\t\t\t\t\t\t\t})]\n\t\t\t\t\t\t));\n\t\t\t\t\t\tmsgprint_dialog.hide_on_page_refresh = true;\n\t\t\t\t\t\tmsgprint_dialog.$wrapper.find(\".variant-click\").on(\"click\", function() {\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\td.hide();\n\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\tmethod:\"erpnext.controllers.item_variant.create_variant\",\n\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\"item\": cur_frm.doc.name,\n\t\t\t\t\t\t\t\t\"args\": args\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\t\tvar doclist = frappe.model.sync(r.message);\n\t\t\t\t\t\t\t\tfrappe.set_route(\"Form\", doclist[0].doctype, doclist[0].name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\td.show();\n\t},\n\ttoggle_attributes: function(frm) {\n\t\tfrm.toggle_display(\"attributes\", frm.doc.has_variants || frm.doc.variant_of);\n\t\tfrm.fields_dict.attributes.grid.toggle_reqd(\"attribute_value\", frm.doc.variant_of ? 1 : 0);\n\t\tfrm.fields_dict.attributes.grid.set_column_disp(\"attribute_value\", frm.doc.variant_of ? 1 : 0);\n\t}\n});\n\ncur_frm.cscript.custom_onload = function () {\n\tif (cur_frm.doc.has_variants == 1) {\n\t\tcur_frm.set_query('attribute', 'attributes', function(){\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t['Item Attribute', 'virtual', '=', 0]\n\t\t\t\t]\n\t\t\t};\n\t\t});\n\t\tcur_frm.set_query('attribute', 'item_variant_restrictions', function(){\n\t\t\tvar attrs = []\n\t\t\tcur_frm.doc.attributes.forEach(function(row){\n\t\t\t\tattrs.push(row.attribute)\n\t\t\t});\n\t\t\treturn {'filters': [['Item Attribute', 'name', 'in', attrs]]}\n\t\t});\n\n\t}\n}\n//Below code would disable the attribute table after being saved.\nfrappe.ui.form.on(\"Item\", \"refresh\", function(frm){\n\tif (frappe.user.has_role(\"System Manager\")){\n\t    frm.fields_dict.attributes.grid.df.read_only = frm.doc.__islocal ? false: true;\n\t\tfrm.fields_dict.attributes.grid.docfields.forEach(function(field){\n\t\t\tfield.read_only = frm.doc.__islocal ? false: true;\n\t\t});\n\t    frm.refresh_field(\"attributes\");\n\t}\n});\n\nfrappe.ui.form.on(\"Item Variant Restrictions\", \"form_render\", function(frm, cdt, cdn){\n\tvar field = cur_frm.fields_dict.item_variant_restrictions.grid.grid_rows_by_docname[cdn].fields_dict.allowed_values;\n\t$(field.input_area).addClass('ui-front');\n\tfield.$input.autocomplete({\n\t\tminChars: 0,\n\t\tminLength: 0,\n\t\tsource: function(request, response){\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'frappe.client.get_list',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: 'Item Attribute Value',\n\t\t\t\t\tfilters: [\n\t\t\t\t\t\t['parent', '=', field.doc.attribute],\n\t\t\t\t\t\t['attribute_value', 'like', request.term + '%']\n\t\t\t\t\t],\n\t\t\t\t\tfields: ['attribute_value'],\n\t\t\t\t\t'parent': cur_frm.doctype\n\t\t\t\t},\n\t\t\t\tcallback: function(res){\n\t\t\t\t\tresponse($.map(res.message, function(d){ return d.attribute_value;}));\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tselect: function(event, ui){\n\t\t\tfield.$input.val(ui.item.value);\n\t\t\tfield.$input.trigger('change');\n\t\t}\n\t});\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item Attribute",
  "enabled": 1,
  "modified": "2015-10-02 10:50:10.750141",
  "name": "item_attribute_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item Attribute', 'update_from', function(frm){\n    if (frm.doc.hidden){\n        frappe.call({\n            'method': 'frappe.client.get_value',\n            'args': {\n                 'doctype': 'Item Attribute',\n                 'filters': {\n                     'name': frm.doc.update_from\n                 },\n                 'fieldname': 'source'\n            },\n            'callback': function(res){\n                frm.set_value('source', res.message.source);\n            }\n        });\n    } else {\n        frm.set_value('source', null);\n    }\n});\ncur_frm.set_query('update_from', function(res){\n    return {\n        filters: [\n           [\"Item Attribute\", \"virtual\", \"=\", 1]\n        ]\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2021-01-05 21:02:55.366153",
  "name": "lead_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Lead\", \"refresh\", function(frm) {\n    frm.add_custom_button(__(\"Sales Call\"), function() {\n        // When this button is clicked, do this\n\t\t\tfrappe.set_route(\"Form\", \"Sales Call Tool\",\n\t\t\t{\"document\": \"Lead\",\n\t\t\t \"lead\": frm.doc.name,\n\t\t\t \"date_of_communication\": Date()});\n\t\t\t \n    },  __(\"Add Communication for\"));\n});\n\nfrappe.ui.form.on(\"Lead\", \"email_id\", function(frm, cdt, cdn){\n\tvar d = locals[cdt][cdn]\n\tfrappe.model.set_value(cdt, cdn, \"email_address_validated\", 0);\n\tcur_frm.refresh_fields();\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2020-10-29 20:02:55.415148",
  "name": "purchase_order_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Purchase Order Item\", {\n\tschedule_date: function(frm, cdt, cdn) {\n\t\tvar row = locals[cdt][cdn];\n\t\tif (row.schedule_date < now()) {\n\t\t\tif(!frm.doc.schedule_date) {\n\t\t\t\terpnext.utils.copy_value_in_all_rows(frm.doc, cdt, cdn, \"items\", \"schedule_date\");\n\t\t\t} else {\n\t\t\t\tset_schedule_date(frm);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/*\nfrappe.ui.form.on(\"Purchase Order Item\", \"item_code\", function(frm, cdt, cdn){\n    var d = locals[cdt][cdn];\n    description = get_description();\n    d.description = description;\n    frm.refresh_fields();\n});\n*/\n\ncur_frm.cscript.is_subcontracting = function(doc, cdt, cdn) {\n    cur_frm.set_query(\"item_code\", \"items\", function(){\n        if (cur_frm.doc.is_subcontracting === 1){\n            return{\n                query: \"erpnext.controllers.queries.item_query\",\n                filters:{ 'is_job_work': 1 }\n            }\n        }\n        else {\n            return{\n                query: \"erpnext.controllers.queries.item_query\",\n                filters:{'is_purchase_item':1}\n            }\n        }\n    });\n    cur_frm.set_query(\"subcontracted_item\", \"items\", function(){\n        if (cur_frm.doc.is_subcontracting == 1){\n            return{\n                query: \"erpnext.controllers.queries.item_query\",\n                filters:{ 'is_job_work': 1 }\n            }\n        }\n        else {\n            return{\n                query: \"erpnext.controllers.queries.item_query\",\n                filters:{'is_purchase_item':1}\n            }\n        }\n    });\n};\nfrappe.ui.form.on(\"Purchase Order\", \"refresh\", function(frm) {\n\n// Get Items from Work Order\ncur_frm.add_custom_button(__('Job Card'),\n    function() {\n        var dialog = new frappe.ui.Dialog({\n        title: \"Get Items from Job Card\",\n        fields: [\n            {\"fieldtype\": \"Link\", \"label\": __(\"Job Card\"), \"fieldname\": \"job_card\",\"options\":'Process Job Card RIGPL',\"reqd\": 1,\n                get_query: function() { return {query: \"rigpl_erpnext.rigpl_erpnext.validations.purchase_order.get_pending_jc\"}},\n            },\n            {\"fieldtype\": \"Button\", \"label\": __(\"Get\"), \"fieldname\": \"get\"},\n            {\"fieldtype\": \"HTML\", \"fieldname\": \"production_order_items_details\"},\n        ],\n    });\n    dialog.show();\n    var fd = dialog.fields_dict;\n    dialog.fields_dict.get.$input.click(function() {\n        var value = dialog.get_values();\n\n    frappe.call({    \n        method: \"frappe.client.get_list\",\n           args: {\n            doctype: \"Process Job Card RIGPL\",\n               fields: [\"production_item\", \"description\", \"qty_available\",\"s_warehouse\",\"name\",\n               \"sales_order_item\", \"uom\"],\n               filters: { \"name\" : value.job_card\n                },\n            },\n            callback: function(res){\n            if(res && res.message){\n                var today = new Date();\n                var row = frappe.model.add_child(cur_frm.doc, \"Purchase Order Item\", \"items\");\n                var jc_name =  res.message[0]['name']\n                var operation = frappe.model.get_value('Process Job Card RIGPL', jc_name, 'operation');\n                var subcon_item_code = frappe.model.get_value('Operation', operation, 'sub_contracting_item_code');\n                frm.doc.is_subcontracting = 1;\n                refresh_field(\"is_subcontracting\");\n                console.log(subcon_item_code);\n                console.log(operation);\n                row.qty = res.message[0]['qty_available'];\n                if (cur_frm.doc.is_subcontracting == 1){\n                    row.subcontracted_item = res.message[0]['production_item'];\n                    row.item_code = subcon_item_code\n                } else{\n                    row.item_code = res.message[0]['production_item'];\n                }\n                row.reference_dt = \"Process Job Card RIGPL\"\n                row.reference_dn = res.message[0]['name'];\n                row.description = res.message[0]['description'];\n                row.from_warehouse = res.message[0]['s_warehouse']\n                row.so_detail = res.message[0]['sales_order_item'];\n                row.price_list_rate = 0;\n                row.rate = 0;\n                if (frm.doc.schedule_date > today){\n                    row.schedule_date = frm.doc.schedule_date\n                } else {\n                    row.schedule_date = today\n                }\n                row.uom = res.message[0]['uom'];\n                row.stock_uom = res.message[0]['uom'];\n                row.conversion_factor = 1;\n                refresh_field(\"items\");\n\n            }\n        }\n    });\n\n\n    });\n\n    var add_production_order_items_to_stock = function(){\n        var items_to_add = []\n        var value = dialog.get_values();\n        $.each($(fd.production_order_items_details.wrapper).find(\".select:checked\"), function(name, item){\n            items_to_add.push($(item).val());\n        });\n        if(items_to_add.length > 0){\n            for(i=0;i<items_to_add.length;i++){\n                add_production_order_items(items_to_add,i)\n            }\n            dialog.hide()\n        }    \n        else{\n            msgprint(\"Select Item Before Add\")\n        }\n    }\n}, __(\"Get items from\"));\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Component",
  "enabled": 1,
  "modified": "2017-02-09 21:02:55.438869",
  "name": "salary_component_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2016, Rohit Industries Ltd. and contributors\n// For license information, please see license.txt\nfrappe.ui.form.on('Salary Component', {\n\trefresh: function(frm) {\n\t},\n\t\n\tonload: function(frm){\n\t\tfrm.set_query(\"account\", function() {\n\t\t\treturn {\n\t\t\t\t\"filters\": {\n\t\t\t\t\t\"is_group\": 0,\n\t\t\t\t\t\"freeze_account\": \"No\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tfrm.set_query(\"earning\", function() {\n\t\t\treturn {\n\t\t\t\t\"filters\": {\n\t\t\t\t\t\"is_earning\": 1,\n\t\t\t\t\t\"only_for_deductions\": 1,\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n});\ncur_frm.add_fetch(\"salary_component\", \"is_deduction\", \"is_deduction\");\ncur_frm.add_fetch(\"salary_component\", \"is_contribution\", \"is_contribution\");",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure",
  "enabled": 1,
  "modified": "2016-08-01 21:02:55.173113",
  "name": "salary_structure_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2016, Rohit Industries Ltd. and contributors\n// For license information, please see license.txt\nfrappe.ui.form.on('Salary Structure', {\n\trefresh: function(frm) {\n\t},\n\t\n\tonload: function(frm){\n\t\tfrm.set_query(\"salary_component\", \"earnings\", function(doc, cdt, cdn) {\n\t\t\treturn {\n\t\t\t\t\"filters\": {\n\t\t\t\t\t\"is_earning\": 1,\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tfrm.set_query(\"salary_component\", \"deductions\", function(doc, cdt, cdn) {\n\t\t\treturn {\n\t\t\t\t\"filters\": {\n\t\t\t\t\t\"is_deduction\": 1,\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tfrm.set_query(\"salary_component\", \"contributions\", function(doc, cdt, cdn) {\n\t\t\treturn {\n\t\t\t\t\"filters\": {\n\t\t\t\t\t\"is_contribution\": 1,\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2017-07-10 21:02:55.288505",
  "name": "sales_order_form_rigpl",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.add_fetch('customer','payment_terms','payment_terms');\ncur_frm.add_fetch('shipping_address_name','address_title','shipping_address_title');\ncur_frm.add_fetch('taxes_and_charges','letter_head','letter_head');",
  "view": "Form"
 }
]